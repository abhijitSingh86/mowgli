version: 2.1

jobs:
  test:
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.7
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: Install dependencies
          command: pipenv sync --dev
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"
      - run:
          name: Run tests
          command: pipenv run pytest
  lint:
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.7
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: Install dependencies
          command: pipenv sync --dev
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"
      - run:
          name: Run linter
          command: pipenv run lint
  prepare-docker:
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.7
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: Install dependencies
          command: pipenv sync --dev
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"
      - run:
          name: Create docker folder with all needed files
          command: |
            pipenv lock --requirements > requirements.txt
            mkdir docker
            cp requirements.txt docker/
            cp Dockerfile docker/
            cp setup.py docker/
            cp README.md docker/
            cp -R mowgli docker/
      - persist_to_workspace:
          root: ~/repo
          paths:
            - docker
  deploy-staging:
    machine: true
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Build and push Docker image to Heroku
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            heroku container:login
            cd docker
            heroku container:push -a mowgli-staging web
            heroku container:release -a mowgli-staging web
  deploy-production:
    machine: true
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Build and push Docker image to Heroku
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            heroku container:login
            cd docker
            heroku container:push -a mowgli-production web
            heroku container:release -a mowgli-production web

workflows:
  build-test-deploy:
    jobs:
      - test
      - lint
      - prepare-docker:
          requires:
            - test
            - lint
      - deploy-staging:
          requires:
            - prepare-docker
      - deploy-production:
          requires:
            - deploy-staging

